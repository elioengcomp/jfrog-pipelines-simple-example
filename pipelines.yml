resources:
  - name: helm_bluegreen_gitrepo
    type: GitRepo
    configuration:
      gitProvider: my_github
      path: elioengcomp/jfrog-pipelines-simple-example
      branches:
        include: helm-bluegreen-poc

  - name: helm_bluegreen_app_image
    type: Image
    configuration:
      registry: my_artifactory
      sourceRepository: my-docker_local
      imageName: f5760.jfrog-pipelines.com/my-docker-local/app
      imageTag: latest
      autoPull: true

  - name: helm_bluegreen_app_chart
    type: HelmChart
    configuration:
      sourceArtifactory: my_artifactory
      repository: app-helm
      chart: app
      version: 0.0.1

  - name: helm_bluegreen_docker_build_info
    type: BuildInfo
    configuration:
      sourceArtifactory: my_artifactory
      buildName: helm_bluegreen_poc_image
      buildNumber: 1

  - name: helm_bluegreen_helm_build_info
    type: BuildInfo
    configuration:
      sourceArtifactory: my_artifactory
      buildName: helm_bluegreen_poc_chart
      buildNumber: 1

  - name: helm_bluegreen_configuration
    type: PropertyBag
    configuration:
      hbgd_namespace: namespace
      hbgd_blue_release: blueRelease
      hbgd_blue_target_service: blueTargetService
      hbgd_green_release: greenRelease
      hbgd_green_target_service: greenTargetService
      hbgd_stage_service: stageService
      hbgd_prod_service: productionService
      hbgd_current_stage_env: blue

  - name: helm_bluegreen_in_progress
      type: PropertyBag
      configuration:
        hbgd_current_stage_env: blue

pipelines:
  - name: helm_bluegreen_poc
    steps:
      - name: trigger_new_build
        type: Bash
        execution:
          onExecute:
            - echo "Starting new build"
      - name: docker_build
        type: DockerBuild
        configuration:
          affinityGroup: dbp_group
          dockerFileLocation: app
          dockerFileName: Dockerfile
          dockerImageName: f5760.jfrog-pipelines.com/my-docker-local/app
          dockerImageTag: 0.0.${run_number}
          inputSteps:
            - name: trigger_new_build
          inputResources:
            - name: helm_bluegreen_gitrepo
              trigger: false
          integrations:
            - name: my_artifactory

      - name: docker_push
        type: DockerPush
        configuration:
          affinityGroup: dbp_group
          targetRepository: my-docker-local
          integrations:
            - name: my_artifactory
          inputSteps:
            - name: docker_build
          outputResources:
            - name: helm_bluegreen_app_image
            - name: helm_bluegreen_docker_build_info

      - name: publish_docker_build
        type: PublishBuildInfo
        configuration:
          inputSteps:
            - name: docker_push
          outputResources:
            - name: helm_bluegreen_docker_build_info

      - name: helm_publish
        type: HelmPublish
        configuration:
          helmVersion: 3
          chartPath: "./chart/app"
          lint: true
          autoPublishBuildInfo: true
          inputSteps:
            - name: publish_docker_build
          inputResources:
            - name: helm_bluegreen_gitrepo
              trigger: false
          outputResources:
            - name: helm_bluegreen_app_chart
            - name: helm_bluegreen_helm_build_info
        execution:
          onStart:
            - CHART_VERSION=0.0.$run_number
            - pushd $res_helm_bluegreen_gitrepo_resourcePath/chart/app
            - "sed -ie \"s/^version: .*$/version: $CHART_VERSION/\" Chart.yaml"
            - "sed -ie \"s/^appVersion: .*$/appVersion: $CHART_VERSION/\" Chart.yaml"
            - popd

      - name: start_helm_blue_green_deploy
        type: Bash
        configuration:
          environmentVariables:
            namespace: pipe-master-pool
            blueRelease: app-blue
            blueTargetService: app-blue-app
            greenRelease: app-green
            greenTargetService: app-green-app
            stageService: stage-app
            productionService: prod-app
          inputSteps:
            - name: helm_publish
          inputResources:
            - name: helm_bluegreen_gitrepo
              trigger: false
          outputResources:
            - name: helm_bluegreen_configuration
        execution:
          onExecute:
            - pushd $res_helm_bluegreen_gitrepo_resourcePath/utils
            - current_stage_env=$(./get_current_stage_environment.sh $productionService)
            - popd
            - >-
              write_output helm_bluegreen_configuration hbgd_namespace=$namespace
              hbgd_blue_release=$blueRelease hbgd_blue_target_service=$blueTargetService
              hbgd_green_release=$greenRelease hbgd_green_target_service=$greenTargetService
              hbgd_stage_service=$stageService hbgd_prod_service=$productionService
              hbgd_current_stage_env=$current_stage_env

      - name: helm_deploy
        type: HelmDeploy
        configuration:
          helmVersion: 3
          releaseName: ${current_stage_release}
          flags: "--set image.registry='f5760.jfrog-pipelines.com/my-docker'"
          integrations:
            - name: my_k8s
          inputResources:
            - name: helm_bluegreen_app_chart
              trigger: false
            - name: helm_bluegreen_configuration
          outputResource:
            - name: helm_bluegreen_in_progress
        execution:
          onStart:
            - current_stage_config_name=hbgd_${hbgd_current_stage_env}_release
            - add_run_variables current_stage_release=${!current_stage_config_name}
          onSuccess:
            - write_output helm_bluegreen_in_progress hbgd_current_stage_env=$hbgd_current_stage_env

      - name: update_stage_service
        type: Bash
        configuration:
          inputResources:
            - name: helm_bluegreen_gitrepo
              trigger: false
            - name: helm_bluegreen_configuration
              trigger: false
            - name: helm_bluegreen_in_progress
          integrations:
            - name: my_k8s
        execution:
          onExecute:
            - current_stage_target_service_config_name=hbgd_${hbgd_current_stage_env}_target_service
            - current_stage_target_service_name=${!current_stage_target_service_config_name}
            - pushd $res_helm_bluegreen_gitrepo_resourcePath/utils
            - ./update_environment_service.sh $current_stage_target_service_name $hbgd_stage_service $hbgd_current_stage_env $hbgd_namespace
            - popd

      - name: test_stage
        type: Bash
        configuration:
          inputSteps:
            - name: update_stage_service
          integrations:
            - name: my_k8s
        execution:
          onExecute:
            - ls -la

      - name: promote_deployment_to_prod
        type: Bash
        configuration:
          inputResources:
            - name: helm_bluegreen_configuration
              trigger: false
            - name: helm_bluegreen_in_progress
              trigger: false
        execution:
          onExecute:
            - ls -la

      - name: rollback_deployment
        type: Bash
        configuration:
          inputResources:
            - name: helm_bluegreen_configuration
              trigger: false
            - name: helm_bluegreen_in_progress
              trigger: false
        execution:
          onExecute:
            - ls -la

  - name: test
    steps:
      - name: test
        type: Bash
        configuration:
          inputResources:
            - name: helm_bluegreen_gitrepo
              trigger: false
          integrations:
            - name: my_k8s
        execution:
          onExecute:
            - jq -h
            - jq --version